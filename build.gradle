buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
	    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:6.0.7"
        classpath "org.grails.plugins:views-gradle:1.1.5"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

version "0.1"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}
 
subprojects { project ->
    apply plugin:"eclipse"
    apply plugin:"idea"
    if ( project.name.endsWith('api')) {
        apply plugin:"war"
        apply plugin:"org.grails.grails-web"
        apply plugin:"org.grails.plugins.views-json"
 
    } else if ( project.name.endsWith('plugin') ) {
        apply plugin:"org.grails.grails-plugin"
        apply plugin:"org.grails.grails-plugin-publish"
    } else if ( project.name.endsWith('web') ) {
        apply plugin:"war"
        apply plugin:"org.grails.grails-web"
        apply plugin:"org.grails.grails-gsp"
        apply plugin:"asset-pipeline"
    }
 
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
 
    dependencyManagement {
        imports {
            mavenBom "org.grails:grails-bom:$grailsVersion"
        }
        applyMavenExclusions false
    }
 
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-logging"
        compile "org.springframework.boot:spring-boot-autoconfigure"
        compile "org.grails:grails-core"
        testCompile "org.grails:grails-plugin-testing"
    }
}
